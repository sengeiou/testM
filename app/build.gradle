import com.android.build.gradle.api.ApplicationVariant
import com.android.builder.core.DefaultProductFlavor
import org.gradle.api.internal.DefaultDomainObjectSet

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.objectbox'

//加载local.properties 读取签名文件信息
Properties props = new Properties()
props.load(project.rootProject.file('keystore.properties').newDataInputStream())

android {
    signingConfigs {
        mengmeng {
            keyAlias props['MENGMENG_KEY_ALIAS']
            keyPassword props['MENGMENG_KEY_PASSWORD']
            storeFile file(props['MENGMENG_STORE_FILE'])
            storePassword props['MENGMENG_STORE_PASSWORD']

            v2SigningEnabled false
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId "com.qingmeng.mengmeng"
        customAppName(applicationVariants, defaultConfig)
        multiDexEnabled true
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a', 'armeabi'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            //混淆开启
            minifyEnabled false
            //是否zip对齐
            zipAlignEnabled false
            signingConfig signingConfigs.mengmeng
            //SD目录名
            buildConfigField("String", "APP_DIR", "\"mengmeng\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //bugly
            buildConfigField("String", "BUGLY_APPID", "\"13ac216f66\"")
        }
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.mengmeng
            //SD目录名
            buildConfigField("String", "APP_DIR", "\"mengmengDebug\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //bugly
            buildConfigField("String", "BUGLY_APPID", "\"6f80b267bd\"")
        }
    }
    flavorDimensions("ip")
    productFlavors {
        //IP地址
        online {
            dimension "ip"
            buildConfigField("String", "SERVER_IP", "\"http://app.ejiameng.cn/\"")
            resValue "string", "AppName", "盟盟"
        }
        moni {
            dimension "ip"
            buildConfigField("String", "SERVER_IP", "\"http://appitest.ejiameng.cn/\"")
            resValue "string", "AppName", "盟盟-模拟"
        }
        offline {
            dimension "ip"
            buildConfigField("String", "SERVER_IP", "\"http://apptest.ejiameng.cn/\"")
            resValue "string", "AppName", "盟盟-线下"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

def customAppName(DefaultDomainObjectSet<ApplicationVariant> applicationVariants, DefaultProductFlavor defaultConfig) {
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "mengmeng-${variant.buildType.name}-${defaultConfig.versionName}-${new Date().format("yyyyMMdd")}"
            variant.productFlavors.forEach() { it ->
                outputFileName += "-" + it.name
            }
            outputFileName += ".apk"
            outputFileName.toLowerCase()
        }
    }
}

//打包时间
static def releaseDate() {
    return new Date().format("yyyyMMdd")
}
//版本
version = [
        support: "28.0.0",
]
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies.multidex
    implementation rootProject.ext.dependencies.kotlin_stdlib_jdk7

    //noinspection NotInterpolated,GradleCompatible
    implementation rootProject.ext.dependencies.support_v4
    implementation rootProject.ext.dependencies.appcompa_v7
    implementation rootProject.ext.dependencies.recyclerview_v7
    implementation rootProject.ext.dependencies.design
    implementation rootProject.ext.dependencies.constraint
    testImplementation rootProject.ext.dependencies.junit
    androidTestImplementation rootProject.ext.dependencies.test_runner
    androidTestImplementation rootProject.ext.dependencies.espresso
    implementation rootProject.ext.dependencies.anko

    // sdk19, sdk21, sdk23 are also available
    implementation rootProject.ext.dependencies.anko_support_v4

    // In case you need support-v4 bindings
    implementation rootProject.ext.dependencies.anko_support_v4
    implementation rootProject.ext.dependencies.anko_appcompat_v7
    implementation rootProject.ext.dependencies.glide
    implementation rootProject.ext.dependencies.retrofit
    implementation rootProject.ext.dependencies.adapter_rxjava2
    implementation rootProject.ext.dependencies.converter_gson
    implementation rootProject.ext.dependencies.logging_interceptor
    implementation rootProject.ext.dependencies.okhttp
    implementation rootProject.ext.dependencies.rxandroid
    implementation rootProject.ext.dependencies.converter_scalars
    implementation rootProject.ext.dependencies.crashreport

    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation rootProject.ext.dependencies.nativecrashreport

    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    implementation rootProject.ext.dependencies.bga_banner
    implementation(name: 'geetest_sensebot_android_v4.0.3_20181214', ext: 'aar')

    //微信
    implementation rootProject.ext.dependencies.wechat_sdk_android_with_mta
    implementation rootProject.ext.dependencies.oss_android_sdk
    implementation rootProject.ext.dependencies.oss_android_sdk1
    implementation rootProject.ext.dependencies.swipeToLoadLayout
    implementation rootProject.ext.dependencies.magicIndicator
    implementation rootProject.ext.dependencies.objectbox_kotlin
    implementation rootProject.ext.dependencies.pictureSelector
    implementation rootProject.ext.dependencies.eventbus
    implementation rootProject.ext.dependencies.jiaozivideoplayer
    implementation rootProject.ext.dependencies.videocache
    implementation rootProject.ext.dependencies.core

    implementation files('libs/open_sdk_r6008_lite.jar')
    implementation project(':wanxin')
    implementation project(':common')
    implementation files('libs/BaiduLBS_Android.jar')
    implementation project(':facelibs')
    implementation project(':waveview')

    implementation 'com.youth.banner:banner:1.4.10'
}

//allprojects {
//    //版本冲突：强制使用某版本依赖
//    configurations.all {
//        resolutionStrategy.force 'com.github.bumptech.glide:glide:4.0.0'
//    }
//}