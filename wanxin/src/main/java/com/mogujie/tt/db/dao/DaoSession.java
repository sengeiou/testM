package com.mogujie.tt.db.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.mogujie.tt.db.entity.DepartmentEntity;
import com.mogujie.tt.db.entity.GroupEntity;
import com.mogujie.tt.db.entity.MessageEntity;
import com.mogujie.tt.db.entity.SessionEntity;
import com.mogujie.tt.db.entity.UserEntity;

import com.mogujie.tt.db.dao.DepartmentEntityDao;
import com.mogujie.tt.db.dao.GroupEntityDao;
import com.mogujie.tt.db.dao.MessageEntityDao;
import com.mogujie.tt.db.dao.SessionEntityDao;
import com.mogujie.tt.db.dao.UserEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig departmentEntityDaoConfig;
    private final DaoConfig groupEntityDaoConfig;
    private final DaoConfig messageEntityDaoConfig;
    private final DaoConfig sessionEntityDaoConfig;
    private final DaoConfig userEntityDaoConfig;

    private final DepartmentEntityDao departmentEntityDao;
    private final GroupEntityDao groupEntityDao;
    private final MessageEntityDao messageEntityDao;
    private final SessionEntityDao sessionEntityDao;
    private final UserEntityDao userEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        departmentEntityDaoConfig = daoConfigMap.get(DepartmentEntityDao.class).clone();
        departmentEntityDaoConfig.initIdentityScope(type);

        groupEntityDaoConfig = daoConfigMap.get(GroupEntityDao.class).clone();
        groupEntityDaoConfig.initIdentityScope(type);

        messageEntityDaoConfig = daoConfigMap.get(MessageEntityDao.class).clone();
        messageEntityDaoConfig.initIdentityScope(type);

        sessionEntityDaoConfig = daoConfigMap.get(SessionEntityDao.class).clone();
        sessionEntityDaoConfig.initIdentityScope(type);

        userEntityDaoConfig = daoConfigMap.get(UserEntityDao.class).clone();
        userEntityDaoConfig.initIdentityScope(type);

        departmentEntityDao = new DepartmentEntityDao(departmentEntityDaoConfig, this);
        groupEntityDao = new GroupEntityDao(groupEntityDaoConfig, this);
        messageEntityDao = new MessageEntityDao(messageEntityDaoConfig, this);
        sessionEntityDao = new SessionEntityDao(sessionEntityDaoConfig, this);
        userEntityDao = new UserEntityDao(userEntityDaoConfig, this);

        registerDao(DepartmentEntity.class, departmentEntityDao);
        registerDao(GroupEntity.class, groupEntityDao);
        registerDao(MessageEntity.class, messageEntityDao);
        registerDao(SessionEntity.class, sessionEntityDao);
        registerDao(UserEntity.class, userEntityDao);
    }
    
    public void clear() {
        departmentEntityDaoConfig.clearIdentityScope();
        groupEntityDaoConfig.clearIdentityScope();
        messageEntityDaoConfig.clearIdentityScope();
        sessionEntityDaoConfig.clearIdentityScope();
        userEntityDaoConfig.clearIdentityScope();
    }

    public DepartmentEntityDao getDepartmentEntityDao() {
        return departmentEntityDao;
    }

    public GroupEntityDao getGroupEntityDao() {
        return groupEntityDao;
    }

    public MessageEntityDao getMessageEntityDao() {
        return messageEntityDao;
    }

    public SessionEntityDao getSessionEntityDao() {
        return sessionEntityDao;
    }

    public UserEntityDao getUserEntityDao() {
        return userEntityDao;
    }

}
